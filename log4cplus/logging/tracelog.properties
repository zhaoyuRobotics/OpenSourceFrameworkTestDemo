########################################################################################################
# 配置根记录器  
# 如果指定了LogLevel值，字符串值FATAL，ERROR，WARN，INFO，DEBUG或自定义LogLevel值。（可自定义日志级别：例如STDOUT）
# ALL < TRACE < DEBUG < INFO < WARN < ERROR < FATAL < OFF  ALL和OFF级别只是将其他所有级别分别切换为on或off的标志。
# 注意：如果要使用终端输出，那么将 STDOUT加入rootlogger 并且将 log4cplus.appender.STDOUT 打开

#log4cplus.rootLogger=TRACE, ALL_MSGS, STDOUT
log4cplus.rootLogger=TRACE, ALL_MSGS



########################################################################################################

#log4cplus.appender.STDOUT=log4cplus::ConsoleAppender

#log4cplus.appender.STDOUT.layout=log4cplus::PatternLayout

#log4cplus.appender.STDOUT.layout.ConversionPattern=%D{%m/%d/%Y %X,%q} [%-5t] [%-5p] - %m%n



########################################################################################################
#滚动转储的文件操作功能
#根据你预先设定的大小来决定是否转储，当超过该大小，后续log信息会另存到新文件中，除了定义每个记录文件的大小之外，你还要确定在#RollingFileAppender类对象构造时最多需要多少个这样的#记录文件(maxBackupIndex+1)，当存储的文件数目超过maxBackupIndex+1时，会删除最早生
#成的文件，保证整个文件数目等于maxBackupIndex+1。然后继续记录
log4cplus.appender.ALL_MSGS=log4cplus::RollingFileAppender

#  自动创建不存在的目录
log4cplus.appender.ALL_MSGS.CreateDirs=true

# 指定日志文件位置
log4cplus.appender.ALL_MSGS.File=logfiles/trace_all.log

# 指定日志文件最大大小（400M）
log4cplus.appender.ALL_MSGS.MaxFileSize=40960000

# 最多备份多少个日志文件
log4cplus.appender.ALL_MSGS.MaxBackupIndex=30

# 布局模式
# 布局模式三种类型：
# SimpleLayout 是一种简单格式的布局器，在输出的原始信息之前加上LogLevel和一个"-"
# TTCCLayout 其格式由时间，线程ID，Logger和NDC 组成
# PatternLayout 是一种有词法分析功能的模式布局器,类似正则表达式。以“%”作为开头的特殊预定义标识符，将产生特殊的格式信息
log4cplus.appender.ALL_MSGS.layout=log4cplus::PatternLayout

# %D”，显示本地时间，比如：“2004-10-16 18:55:45”  
# %q – 表示当前时刻中毫秒部分(0-999)，如"237"
# “%t”，输出记录器所在的线程ID
# “%p”，输出LogLevel
# “%m”，输出原始信息
# “%n”，换行符
log4cplus.appender.ALL_MSGS.layout.ConversionPattern=%D{%m/%d/%Y %H:%M:%S,%q} [%-5t] [%-5p] - %m%n
